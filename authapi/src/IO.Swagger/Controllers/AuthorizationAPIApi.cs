/*
 * Permission Management API documentation
 *
 * This is an API for managing application permissions.
 *
 * OpenAPI spec version: 1.0.0-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AuthorizationAPIApiController : ControllerBase
    { 
        /// <summary>
        /// Check whether Permission is granted for user
        /// </summary>
        /// <remarks>Check whether Permission is granted for user</remarks>
        /// <param name="entity">The entity name</param>
        /// <param name="action">The action name</param>
        /// <param name="entityId">The particular entity Id</param>
        /// <response code="200">Permission is granted to user</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Permission not granted to user</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/polarfox/AuthAPI/1.0.0/checkpermission")]
        [ValidateModelState]
        [SwaggerOperation("CheckPermission")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult CheckPermission([FromQuery][Required()]string entity, [FromQuery][Required()]string action, [FromQuery]string entityId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Check whether Role is granted for user
        /// </summary>
        /// <remarks>Check whether Role is granted for user</remarks>
        /// <param name="roleId">The Role Id</param>
        /// <param name="userId">The User ID</param>
        /// <response code="200">Role is granted to user</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Role not granted to user</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/polarfox/AuthAPI/1.0.0/checkrole")]
        [ValidateModelState]
        [SwaggerOperation("CheckRole")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult CheckRole([FromQuery][Required()]string roleId, [FromQuery][Required()]string userId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Check whether Role is granted for current user
        /// </summary>
        /// <remarks>Check whether Role is granted for current user</remarks>
        /// <param name="roleId">The Role Id</param>
        /// <response code="200">Role is granted to user</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Role not granted to user</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/polarfox/AuthAPI/1.0.0/checkrole/{roleId}")]
        [ValidateModelState]
        [SwaggerOperation("CheckRoleById")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult CheckRoleById([FromRoute][Required]string roleId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }
    }
}
