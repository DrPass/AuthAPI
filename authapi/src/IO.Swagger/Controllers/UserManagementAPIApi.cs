/*
 * Permission Management API documentation
 *
 * This is an API for managing application permissions.
 *
 * OpenAPI spec version: 1.0.0-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UserManagementAPIApiController : ControllerBase
    { 
        /// <summary>
        /// Delete Organization
        /// </summary>
        /// <remarks>Delete Organization</remarks>
        /// <param name="orgId">Organization Id.</param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="404">Requested resource not found</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpDelete]
        [Route("/polarfox/AuthAPI/1.0.0/organizations/{orgId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteOrganization")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Requested resource not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult DeleteOrganization([FromRoute][Required] [MinLength(10)]string orgId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Delete User profile
        /// </summary>
        /// <remarks>Delete User profile</remarks>
        /// <param name="userId">Organization Id.</param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="404">Requested resource not found</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpDelete]
        [Route("/polarfox/AuthAPI/1.0.0/users/{userId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteUser")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Requested resource not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult DeleteUser([FromRoute][Required] [MinLength(10)]string userId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get current user profile
        /// </summary>
        /// <remarks>Get current user profile</remarks>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="404">Requested resource not found</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/polarfox/AuthAPI/1.0.0/users/me")]
        [ValidateModelState]
        [SwaggerOperation("GetCurrentUser")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2005), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Requested resource not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult GetCurrentUser()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2005));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"organizationId\" : \"organizationId\",\n    \"firstName\" : \"firstName\",\n    \"lastName\" : \"lastName\",\n    \"statusReason\" : \"Locked due to exceeding the number of incorrect password attempts\",\n    \"mail\" : \"mail\",\n    \"phone\" : \"phone\",\n    \"middleName\" : \"middleName\",\n    \"position\" : \"position\",\n    \"avatar\" : \"avatar\",\n    \"type\" : \"customerUser\",\n    \"userId\" : \"userId\",\n    \"status\" : \"active\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2005>(exampleJson)
                        : default(InlineResponse2005);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets list of Organizations
        /// </summary>
        /// <remarks>Get organizations available to current user. Typically sysadmin user can access all organizations, customer user can access only his own organization</remarks>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/polarfox/AuthAPI/1.0.0/organizations")]
        [ValidateModelState]
        [SwaggerOperation("GetOrganizations")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2003), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult GetOrganizations()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2003));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"id\" : \"id\",\n    \"type\" : \"customer\"\n  }, {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"id\" : \"id\",\n    \"type\" : \"customer\"\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2003>(exampleJson)
                        : default(InlineResponse2003);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Users List
        /// </summary>
        /// <remarks>Get users available to current user. Typically sysadmin user can access all users, local admin user can access only users of his organization, casual user can access only himself</remarks>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="404">Requested resource not found</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/polarfox/AuthAPI/1.0.0/users")]
        [ValidateModelState]
        [SwaggerOperation("GetUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2004), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Requested resource not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult GetUsers()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2004));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"organizationId\" : \"organizationId\",\n    \"firstName\" : \"firstName\",\n    \"lastName\" : \"lastName\",\n    \"statusReason\" : \"Locked due to exceeding the number of incorrect password attempts\",\n    \"mail\" : \"mail\",\n    \"phone\" : \"phone\",\n    \"middleName\" : \"middleName\",\n    \"position\" : \"position\",\n    \"avatar\" : \"avatar\",\n    \"type\" : \"customerUser\",\n    \"userId\" : \"userId\",\n    \"status\" : \"active\"\n  }, {\n    \"organizationId\" : \"organizationId\",\n    \"firstName\" : \"firstName\",\n    \"lastName\" : \"lastName\",\n    \"statusReason\" : \"Locked due to exceeding the number of incorrect password attempts\",\n    \"mail\" : \"mail\",\n    \"phone\" : \"phone\",\n    \"middleName\" : \"middleName\",\n    \"position\" : \"position\",\n    \"avatar\" : \"avatar\",\n    \"type\" : \"customerUser\",\n    \"userId\" : \"userId\",\n    \"status\" : \"active\"\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2004>(exampleJson)
                        : default(InlineResponse2004);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Grant permission for particular entity to User
        /// </summary>
        /// <remarks>Grant permission to User</remarks>
        /// <param name="body"></param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="404">Requested resource not found</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/polarfox/AuthAPI/1.0.0/grantpermission")]
        [ValidateModelState]
        [SwaggerOperation("GrantPermission")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Requested resource not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult GrantPermission([FromBody]UserPermission body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Grant Role to User
        /// </summary>
        /// <remarks>Grant Role to User</remarks>
        /// <param name="body"></param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="404">Requested resource not found</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/polarfox/AuthAPI/1.0.0/grant")]
        [ValidateModelState]
        [SwaggerOperation("GrantRole")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Requested resource not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult GrantRole([FromBody]UserRole body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Register new Organization
        /// </summary>
        /// <remarks>Register new organization in organization list</remarks>
        /// <param name="body"></param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpPut]
        [Route("/polarfox/AuthAPI/1.0.0/organizations")]
        [ValidateModelState]
        [SwaggerOperation("InsertOrganization")]
        [SwaggerResponse(statusCode: 200, type: typeof(Organization), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult InsertOrganization([FromBody]Organization body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Organization));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"name\",\n  \"description\" : \"description\",\n  \"id\" : \"id\",\n  \"type\" : \"customer\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Organization>(exampleJson)
                        : default(Organization);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Lock user account
        /// </summary>
        /// <remarks>Lock user account</remarks>
        /// <param name="userId">Organization Id.</param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="404">Requested resource not found</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/polarfox/AuthAPI/1.0.0/users/{userId}/lock")]
        [ValidateModelState]
        [SwaggerOperation("LockUser")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Requested resource not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult LockUser([FromRoute][Required] [MinLength(10)]string userId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Revoke permission for particular entity from User
        /// </summary>
        /// <remarks>Revoke permission from User</remarks>
        /// <param name="body"></param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="404">Requested resource not found</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/polarfox/AuthAPI/1.0.0/revokepermission")]
        [ValidateModelState]
        [SwaggerOperation("RevokePermission")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Requested resource not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult RevokePermission([FromBody]UserPermission body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Revoke Role from User
        /// </summary>
        /// <remarks>Revoke Role from User</remarks>
        /// <param name="body"></param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="404">Requested resource not found</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/polarfox/AuthAPI/1.0.0/revoke")]
        [ValidateModelState]
        [SwaggerOperation("RevokeRole")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Requested resource not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult RevokeRole([FromBody]UserRole body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Unlock user account
        /// </summary>
        /// <remarks>Unlock user account</remarks>
        /// <param name="userId">Organization Id.</param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="404">Requested resource not found</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/polarfox/AuthAPI/1.0.0/users/{userId}/unlock")]
        [ValidateModelState]
        [SwaggerOperation("UnlockUser")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Requested resource not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult UnlockUser([FromRoute][Required] [MinLength(10)]string userId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Post update to Organization
        /// </summary>
        /// <remarks>Post update to Organization</remarks>
        /// <param name="body"></param>
        /// <param name="orgId">Organization Id.</param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="404">Requested resource not found</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/polarfox/AuthAPI/1.0.0/organizations/{orgId}")]
        [ValidateModelState]
        [SwaggerOperation("UpdateOrganization")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Requested resource not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult UpdateOrganization([FromBody]Organization body, [FromRoute][Required] [MinLength(10)]string orgId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Post update to User profile
        /// </summary>
        /// <remarks>Post update to User profile</remarks>
        /// <param name="body"></param>
        /// <param name="userId">Organization Id.</param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid syntax</response>
        /// <response code="401">Authorization key is missing or invalid</response>
        /// <response code="404">Requested resource not found</response>
        /// <response code="405">Requested method not allowed</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/polarfox/AuthAPI/1.0.0/users/{userId}")]
        [ValidateModelState]
        [SwaggerOperation("UpdateUser")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid syntax")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization key is missing or invalid")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Requested resource not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Requested method not allowed")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal server error")]
        public virtual IActionResult UpdateUser([FromBody]User body, [FromRoute][Required] [MinLength(10)]string userId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }
    }
}
